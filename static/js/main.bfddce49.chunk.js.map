{"version":3,"sources":["components/Button.js","components/Keypad.js","components/Display.js","components/Calculator.js","components/Header.js","App.js","index.js"],"names":["Button","props","value","button","style","id","className","onClick","btnSymbol","calcButtons","gridColumnStart","gridColumnEnd","Keypad","buttons","map","key","class","Display","type","mathOperations","num1","num2","Calculator","state","previousValue","currentValue","operator","handleClick","e","target","performCalculations","setState","prevState","parseFloat","toString","test","includes","console","log","this","React","Component","headerStyle","backgroundColor","color","width","padding","margin","marginBottom","Header","textAlign","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfddce49.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction Button(props) {\n  return (\n      <button\n        value={props.button.value}\n        style={props.button.style}\n        id={props.button.id}\n        className={'keypadButton ' + props.button.className}\n        // className='keypadButton'\n        onClick={props.onClick}>{props.button.btnSymbol}</button>\n  );\n}\n\n\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nconst calcButtons = [\n  {\n    id: 'clear', value: 'C', btnSymbol: 'C',\n    style: {gridColumnStart: '1',\n    gridColumnEnd: '3'}\n  },\n  {id: 'plus-minus', value: '', btnSymbol: '±'},\n  {\n    id: 'divide', value: '/', btnSymbol: '÷',\n    className: 'operatorButton'\n  },\n  {id: 'seven', value: '7', btnSymbol: '7'},\n  {id: 'eight', value: '8', btnSymbol: '8'},\n  {id: 'nine', value: '9', btnSymbol: '9'},\n  {\n    id: 'multiply', value: '*', btnSymbol: '×',\n    className: 'operatorButton'\n  },\n  {id: 'four', value: '4', btnSymbol: '4'},\n  {id: 'five', value: '5', btnSymbol: '5'},\n  {id: 'six', value: '6', btnSymbol: '6'},\n  {\n    id: 'subtract', value: '-', btnSymbol: '-',\n    className: 'operatorButton'\n  },\n  {id: 'one', value: '1', btnSymbol: '1'},\n  {id: 'two', value: '2', btnSymbol: '2'},\n  {id: 'three', value: '3', btnSymbol: '3'},\n  {\n    id: 'add', value: '+', btnSymbol: '+',\n    className: 'operatorButton'\n  },\n  {id: 'zero', value: '0', btnSymbol: '0'},\n  {id: 'decimal', value: '.',  btnSymbol: '.'},\n  {\n    id: 'equals', value: '=', btnSymbol: '=',\n    className: 'operatorButton',\n    style: {gridColumnStart: '3',\n    gridColumnEnd: '5'\n    },\n  }\n]\n\nfunction Keypad(props) {\n\n  const buttons = calcButtons.map(button =>\n     (<Button\n       key={button.id}\n       class={button.className}\n       style={button.style}\n       button={button}\n       onClick={props.onClick} />\n   ));\n\n  return (\n    <div className='keypad'>\n     {buttons}\n    </div>\n  )\n}\n\nexport default Keypad;\n","import React from 'react'\n\n\nfunction  Display (props) {\n\n    return (\n        <div className='calcDisplay'>\n          <p id='display'\n            type='text'\n            value={props.value}>\n            {props.value}\n            </p>\n          </div>\n    )\n}\n\nexport default Display;\n","import React from 'react';\nimport Keypad from './Keypad';\nimport Display from './Display'\n\nconst mathOperations =\n{\n  'add': (num1, num2) => num1 + num2,\n  'subtract': (num1, num2) => num1 - num2,\n  'multiply': (num1, num2) => num1 * num2,\n  'divide': (num1, num2) => num1 / num2\n}\n\nclass Calculator extends React.Component {\n  state = {\n    previousValue: '',\n    currentValue: '0',\n    operator: ''\n  }\n\n  // handleChange = (e) => this.setState({currentValue: e.target.value});\n  handleClick = (e) => {\n\n    const {value, id} = e.target;\n\n    let performCalculations = () => {\n      this.setState(prevState => {\n        let {previousValue, currentValue, operator} = prevState;\n\n        if (currentValue === '-') {\n          return {\n            currentValue: ''\n          }\n        }\n\n        if (currentValue !== '' && operator !== '' && previousValue === '') {\n          previousValue = currentValue;\n        }\n\n        if (currentValue !== '' && operator !== '' && previousValue !== '') {\n          let num1 = parseFloat(previousValue);\n          let num2 = parseFloat(currentValue);\n          let result = mathOperations[prevState.operator](num1,num2);\n\n          return {\n            currentValue: '',\n            operator: '',\n            previousValue: result.toString()\n          }\n        }\n      });\n    }\n\n    let enterOperator = () => {\n      performCalculations();\n\n      this.setState(prevState => {\n        const {previousValue, currentValue, operator} = prevState;\n\n        if (id === 'subtract' && currentValue === '' && operator !== '') {\n          return {\n            currentValue: '-'\n          }\n        }\n        else if (currentValue !== '' && operator === '' && previousValue === '') {\n          return {\n            currentValue: '',\n            previousValue: currentValue,\n            operator: id\n          }\n        } else {\n          return {\n            operator: id\n          }\n        }\n      });\n    }\n\n    let enterNumbers = () => {\n      this.setState(prevState => {\n        const {currentValue, operator, previousValue} = prevState;\n\n         if (id === 'zero') {\n          if (operator === 'divide' && previousValue !== '') {\n            return {\n              currentValue: ''\n            }\n          }\n          \n        }\n\n        if (currentValue === '' || currentValue === '0') {\n          if (id  === 'decimal') {\n            return {\n              currentValue: '0' + value\n            }\n          } else {\n            return {\n              currentValue: value\n            }\n          }\n        } else {\n          if (id  === 'decimal') {\n            if (currentValue === '-') {\n              return {\n                currentValue: '-0' + value\n              }\n            } else if (!currentValue.includes(value)) {\n                return {\n                  currentValue: currentValue + value\n                }\n              }\n          } else {\n            return {\n              currentValue: currentValue + value\n            }\n          }\n        }\n      });\n    }\n\n    let clear = () => {\n      this.setState(prevState => {\n        return {\n          previousValue: '',\n          currentValue: '0',\n          operator: ''\n        }\n      });\n    }\n\n    let convertSign = () => {\n      this.setState(prevState => {\n        const {previousValue, currentValue} = prevState;\n\n        if (currentValue !== '') {\n          return {\n            currentValue: (-parseFloat(currentValue)).toString()\n          }\n        } else if (previousValue !== ''){\n          return {\n            previousValue: (-parseFloat(previousValue)).toString()\n          }\n        }\n      });\n    }\n\n    if (id === 'plus-minus') {\n      convertSign();\n    } else if (id === 'clear') {\n      clear();\n    } else if (id === 'equals') {\n      performCalculations();\n    } else if (id in mathOperations) {\n      enterOperator();\n    } else if (/\\d/g.test(value) || id  === 'decimal') {\n      enterNumbers();\n    } else {\n      console.log('Error! Unknown key.')\n    }\n  }\n\n  render () {\n    // console.log(this.props);\n    return (\n      <div className='calculator'>\n        <Display value={this.state.currentValue===''? this.state.previousValue : this.state.currentValue} />\n        <Keypad onClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from 'react';\n\n\nfunction Header() {\n  return (\n    <div style={headerStyle}>\n      <h1 style={{textAlign: 'center'}}>Calculator</h1>\n    </div>\n  );\n}\nconst headerStyle = {\nbackgroundColor: '#696773',\ncolor: '#fff',\nwidth: '70%',\npadding: '0.5rem',\n// margin: '0 auto 2rem auto'\nmargin: '0 auto',\nmarginBottom: '2rem'\n}\n\n\nexport default Header;\n","import React from 'react';\nimport Calculator from './components/Calculator';\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}